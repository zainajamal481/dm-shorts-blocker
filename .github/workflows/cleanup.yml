name: Cleanup

on:
  schedule:
    - cron: '0 6 * * 0'  # Every Sunday at 6 AM
  workflow_dispatch:  # Manual trigger

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Clean up old artifacts
        run: |
          echo "Cleaning up old artifacts..."
          
          # This would be implemented based on your storage solution
          # For GitHub Actions artifacts, they are automatically cleaned up
          echo "GitHub Actions artifacts are automatically cleaned up"
          
          # Clean up local temporary files
          find . -name "*.tmp" -delete
          find . -name "*.log" -delete
          find . -name ".DS_Store" -delete
          
          echo "Local cleanup completed"

      - name: Clean up old releases
        uses: actions/github-script@v7
        with:
          script: |
            // Keep only the last 10 releases
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            if (releases.data.length > 10) {
              const releasesToDelete = releases.data.slice(10);
              
              for (const release of releasesToDelete) {
                console.log(`Deleting old release: ${release.tag_name}`);
                await github.rest.repos.deleteRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  release_id: release.id
                });
              }
            }

      - name: Clean up old branches
        uses: actions/github-script@v7
        with:
          script: |
            // Delete merged branches older than 30 days
            const branches = await github.rest.repos.listBranches({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            const thirtyDaysAgo = new Date();
            thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);
            
            for (const branch of branches.data) {
              if (branch.name !== 'main' && branch.name !== 'master') {
                const commit = await github.rest.repos.getCommit({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: branch.name
                });
                
                const commitDate = new Date(commit.data.commit.author.date);
                
                if (commitDate < thirtyDaysAgo) {
                  console.log(`Deleting old branch: ${branch.name}`);
                  await github.rest.git.deleteRef({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    ref: `heads/${branch.name}`
                  });
                }
              }
            }

      - name: Clean up old issues
        uses: actions/github-script@v7
        with:
          script: |
            // Close issues that haven't been updated in 90 days
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              per_page: 100
            });
            
            const ninetyDaysAgo = new Date();
            ninetyDaysAgo.setDate(ninetyDaysAgo.getDate() - 90);
            
            for (const issue of issues.data) {
              const lastUpdate = new Date(issue.updated_at);
              
              if (lastUpdate < ninetyDaysAgo && !issue.labels.some(label => 
                ['pinned', 'security', 'good first issue', 'help wanted'].includes(label.name)
              )) {
                console.log(`Closing old issue: #${issue.number}`);
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed'
                });
                
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  body: 'This issue has been automatically closed due to inactivity. If this is still relevant, please reopen it.'
                });
              }
            }

      - name: Clean up old pull requests
        uses: actions/github-script@v7
        with:
          script: |
            // Close pull requests that haven't been updated in 60 days
            const pullRequests = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              per_page: 100
            });
            
            const sixtyDaysAgo = new Date();
            sixtyDaysAgo.setDate(sixtyDaysAgo.getDate() - 60);
            
            for (const pr of pullRequests.data) {
              const lastUpdate = new Date(pr.updated_at);
              
              if (lastUpdate < sixtyDaysAgo) {
                console.log(`Closing old pull request: #${pr.number}`);
                await github.rest.pulls.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: pr.number,
                  state: 'closed'
                });
                
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  body: 'This pull request has been automatically closed due to inactivity. If you would like to continue working on it, please reopen it.'
                });
              }
            }

      - name: Notify cleanup completion
        uses: sarisia/actions-status-discord@v1
        if: env.DISCORD_WEBHOOK
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: success
          title: "ðŸ§¹ Cleanup Completed"
          description: |
            Weekly cleanup has been completed successfully.
            
            **Repository:** ${{ github.repository }}
            **Branch:** ${{ github.ref }}
            
            Cleaned up:
            - Old artifacts
            - Old releases (kept last 10)
            - Old branches (older than 30 days)
            - Old issues (inactive for 90 days)
            - Old pull requests (inactive for 60 days)
